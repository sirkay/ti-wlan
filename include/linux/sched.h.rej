--- include/linux/sched.h	2011-01-01 15:00:05.064923587 +1100
+++ include/linux/sched.h	2010-12-16 16:06:47.662212109 +1100
@@ -1549,64 +1528,6 @@
 #endif /* CONFIG_TRACING */
 };
 
-#ifdef CONFIG_SCHED_BFS
-extern int grunqueue_is_locked(void);
-extern void grq_unlock_wait(void);
-#define tsk_seruntime(t)		((t)->sched_time)
-#define tsk_rttimeout(t)		((t)->rt_timeout)
-#define task_rq_unlock_wait(tsk)	grq_unlock_wait()
-
-static inline void set_oom_timeslice(struct task_struct *p)
-{
-	p->time_slice = HZ;
-}
-
-static inline void tsk_cpus_current(struct task_struct *p)
-{
-}
-
-#define runqueue_is_locked(cpu)	grunqueue_is_locked()
-
-static inline void print_scheduler_version(void)
-{
-	printk(KERN_INFO"BFS CPU scheduler v0.363 by Con Kolivas.\n");
-}
-
-static inline int iso_task(struct task_struct *p)
-{
-	return (p->policy == SCHED_ISO);
-}
-#else
-extern int runqueue_is_locked(int cpu);
-extern void task_rq_unlock_wait(struct task_struct *p);
-#define tsk_seruntime(t)	((t)->se.sum_exec_runtime)
-#define tsk_rttimeout(t)	((t)->rt.timeout)
-
-static inline void sched_exit(struct task_struct *p)
-{
-}
-
-static inline void set_oom_timeslice(struct task_struct *p)
-{
-	p->rt.time_slice = HZ;
-}
-
-static inline void tsk_cpus_current(struct task_struct *p)
-{
-	p->rt.nr_cpus_allowed = current->rt.nr_cpus_allowed;
-}
-
-static inline void print_scheduler_version(void)
-{
-	printk(KERN_INFO"CFS CPU scheduler.\n");
-}
-
-static inline int iso_task(struct task_struct *p)
-{
-	return 0;
-}
-#endif
-
 /* Future-safe accessor for struct task_struct's cpus_allowed. */
 #define tsk_cpumask(tsk) (&(tsk)->cpus_allowed)
 
